#For this project, I was provided a downloadble Spotify data set

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then the Spotify Data .csv was inserted into the table.
#Next, an analysis was made based on the previous data

#1. What is the average danceability by artist?
SELECT artist_name, AVG(danceability)*100 AS avg_danceability
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg_danceability DESC;

#2. Who are the top 10 artists based on popularity?
SELECT artist_name, AVG(popularity) AS avg_popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg_popularity DESC
LIMIT 10;

#3. What artist released the longest song?
SELECT artist_name, track_name, MAX(duration_ms) AS max_duration_ms
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name
ORDER BY max_duration_ms DESC
LIMIT 1;

#4.What is the average danceability for the 10 most popular songs?
SELECT AVG(danceability) AS avg_danceability
FROM (
    SELECT danceability
    FROM BIT_DB.Spotifydata
    ORDER BY popularity DESC
    LIMIT 10
) AS top_songs;

#5.  Which track has the highest energy?
SELECT artist_name, track_name, MAX(energy)*100 AS max_energy
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name
ORDER BY max_energy DESC
LIMIT 1;

#6.What is the average loudness by artist?
SELECT artist_name, AVG(loudness) AS avg_loudness
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg_loudness DESC;

#7.Which artist has the most tracks with a danceability above 0.8?
SELECT artist_name, COUNT(*) AS high_danceability_tracks
FROM BIT_DB.Spotifydata
WHERE danceability > 0.8
GROUP BY artist_name
ORDER BY high_danceability_tracks DESC
LIMIT 1;

#8. What is the average tempo for songs in each key?
SELECT song_key, AVG(tempo) AS avg_tempo
FROM BIT_DB.Spotifydata
GROUP BY song_key
ORDER BY avg_tempo DESC;

#9. What is the average song duration for the top 10 most popular tracks?
SELECT AVG(duration_ms) AS avg_duration_ms
FROM (
    SELECT duration_ms
    FROM BIT_DB.Spotifydata
    ORDER BY popularity DESC
    LIMIT 10
) AS top_songs;
